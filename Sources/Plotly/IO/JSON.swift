import Foundation


/// Functions for serializing `Figure`s to JavaScript Object Notation (JSON) compatible with _Plotly.js_ library.
struct JSON {
    /// Returns JSON serialization compatible with _Plotly.js_ from the provided `figure`.
    ///
    /// _Plotly.js_ charts are described declaratively as JSON objects. Every aspect of a chart, e.g. the colors, the grids, the data,
    /// and so on, has a corresponding JSON attribute. Exhaustive list of the attributes can be found in the
    /// [reference documentation](https://plot.ly/javascript/reference/page)
    ///
    /// Here is a simple example of a Scatter plot chart:
    /// ```swift
    /// let figure = Figure(data: [
    ///     Scatter(
    ///         name: "Example scatter plot",
    ///         x: [1, 2, 3], y: [3, 1, 6],
    ///         mode: [.lines, .markers])
    ///     ]
    /// )
    /// ```
    /// Here is the equivalent JSON serialization generated by this function:
    /// ```javascript
    /// var figure = { "data": [
    ///    { "type": 'scatter',
    ///      "name": 'Example scatter plot',
    ///      "x": [1, 2, 3], "y": [3, 1, 6],
    ///      "mode": 'lines+markers' }
    ///    ]
    /// };
    /// ```
    static func create(from figure: Figure, formatting: JSONEncoder.OutputFormatting = [])
        throws -> String {
        let encoder = JSONEncoder()
        encoder.outputFormatting = formatting
        encoder.nonConformingFloatEncodingStrategy = .convertToString(
            positiveInfinity: "null", negativeInfinity: "null", nan: "null")

        let figureEncoded = try encoder.encode(figure)
        let figureJson = String(data: figureEncoded, encoding: .utf8)!

        return figureJson
    }
}
